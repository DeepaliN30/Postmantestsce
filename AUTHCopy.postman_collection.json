{
	"info": {
		"_postman_id": "986bdf7a-b1ad-480a-97e0-2ea75d6882e0",
		"name": "AUTHCopy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create account ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);",
							"    return v.toString(16);",
							"});",
							"//variables.set('guid', guid.substring(0, 6));",
							"",
							"var email = guid+\"@mailinator.com\";",
							"",
							"postman.setEnvironmentVariable('Memberemail', email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"IsSuccessful\"] = responseBody === true;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"IsSuccessful\"] = jsonData.IsSuccessful === true;",
							"/*tests[\"ReturnType\"] = jsonData.ReturnType === \"MemberWithToken\";",
							"tests[\"Can change password\"] = jsonData.Data.Member.CanChangePassword === false; ",
							"//store memberid in variable to be used in next request to create saved item",
							"var memberid= jsonData.Data.Member.MemberId;",
							"postman.setEnvironmentVariable(\"MemberId\", memberid);",
							"",
							"var trackingid= jsonData.Data.TrackingId;",
							"postman.setEnvironmentVariable(\"TrackingId\", trackingid);",
							"tests[\"Memberid not null\"] = jsonData.Data.Member.MemberId  = !_.isEmpty(memberid);",
							"tests[\"Tracking id not null\"] = jsonData.Data.TrackingId = !_.isEmpty(trackingid);*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"TokenTimeoutSeconds\": 0,\r\n  \"Email\": \"{{Memberemail}}\",\r\n  \"Password\": \"test1234\",\r\n  \"LastAcceptedTermsVersion\": \"\",\r\n  \"LastAcceptedPrivacyPolicyVersion\": \"\"\r\n  \r\n}"
				},
				"url": {
					"raw": "{{AccountApiHosturl}}/v1/members?sendEmail=true&performBlackListCheck=true",
					"host": [
						"{{AccountApiHosturl}}"
					],
					"path": [
						"v1",
						"members"
					],
					"query": [
						{
							"key": "sendEmail",
							"value": "true"
						},
						{
							"key": "performBlackListCheck",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"IsSuccessful\"] = jsonData.IsSuccessful === true;",
							"tests[\"ReturnType\"] = jsonData.ReturnType === \"MemberWithToken\";",
							"var membertoken = jsonData.Data.Token;",
							"postman.setEnvironmentVariable(\"Membertoken\", membertoken);",
							"tests[\"Member token is not null\"] = !_.isNull(membertoken);",
							"tests[\"Can change password\"] = jsonData.Data.Member.CanChangePassword === false;",
							"tests[\"Tracking is is not null\"] = !_.isNull(jsonData.Data.TrackingId);",
							"postman.setEnvironmentVariable(\"TrackingId\", jsonData.Data.TrackingId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"TokenTimeoutSeconds\": 0,\r\n  \"Email\": \"{{Memberemail}}\",\r\n  \"Password\": \"test1234\",\r\n  \"LastAcceptedTermsVersion\": \"\",\r\n  \"LastAcceptedPrivacyPolicyVersion\": \"\"\r\n  \r\n}"
				},
				"url": {
					"raw": "{{AccountApiHosturl}}/v1/authentication/password",
					"host": [
						"{{AccountApiHosturl}}"
					],
					"path": [
						"v1",
						"authentication",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign-up",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);",
							"    return v.toString(16);",
							"});",
							"//variables.set('guid', guid.substring(0, 6));",
							"",
							"var email = guid+\"@mailinator.com\";",
							"",
							"postman.setEnvironmentVariable('Memberemail', email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"IsSuccessful\"] = responseBody === true;",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"test100@mailinator.com\",\r\n  \"password\": \"test1234\",\r\n  \"twoFactorAuthCode\": \"string\"\r\n}"
				},
				"url": {
					"raw": "{{Authurl}}/auth/api/v1/authentication/sign-in?service=carsales&deviceType=Desktop",
					"host": [
						"{{Authurl}}"
					],
					"path": [
						"auth",
						"api",
						"v1",
						"authentication",
						"sign-in"
					],
					"query": [
						{
							"key": "service",
							"value": "carsales"
						},
						{
							"key": "deviceType",
							"value": "Desktop"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign up",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);",
							"    return v.toString(16);",
							"});",
							"//variables.set('guid', guid.substring(0, 6));",
							"",
							"var email = guid+\"@mailinator.com\";",
							"",
							"postman.setEnvironmentVariable('Memberemail', email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{Authorization}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"test789@mailinator.com\"\r\n}"
				},
				"url": {
					"raw": "{{Authurl}}/auth/api/v1/enter/sign-up?service=carsales",
					"host": [
						"{{Authurl}}"
					],
					"path": [
						"auth",
						"api",
						"v1",
						"enter",
						"sign-up"
					],
					"query": [
						{
							"key": "service",
							"value": "carsales"
						}
					]
				}
			},
			"response": []
		}
	]
}